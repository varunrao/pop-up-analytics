AWSTemplateFormatVersion: '2010-09-09'
Description: TI Pop-up analytics Portfolio for Service Catalog.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Portfolio Information
        Parameters:
          - PorfolioName
          - PortfolioProvider
          - PorfolioDescription
      - Label:
          default: IAM Settings
        Parameters:
          - LaunchRoleName
          - LinkedRole1
          - LinkedRole2
          - CreateEndUsers
      - Label:
          default: Product Settings
        Parameters:
          - RepoRootURL
Parameters:
  PortfolioProvider:
    Type: String
    Description: Provider Name
    Default: IT Services
  PorfolioName:
    Type: String
    Description: Portfolio Name
    Default: Service Catalog Pop-up analytics portfolio
  PorfolioDescription:
    Type: String
    Description: Portfolio Description
    Default: Service Catalog Portfolio that contains reference architecture products
      for TI Pop-up analytics.
  LaunchRoleName:
    Type: String
    Description: Name of the launch constraint role for VPC products. leave this blank
      to create the role.
  LinkedRole1:
    Type: String
    Description: (Optional) The name of a role which can execute products in this
      portfolio.
  LinkedRole2:
    Type: String
    Description: (Optional) The name of a second role which can execute products in
      this portfolio.
  RepoRootURL:
    Type: String
    Description: Root url for the repo containing the product templates.
    Default: https://s3.amazonaws.com/pop-up-analytics-us-east-1/cloudformation/
  CreateEndUsers:
    Type: String
    Description: Select Yes to Create the ServiceCatalogEndusers IAM group. No if
      you have already created the group
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'Yes'
Conditions:
  CreateLaunchConstraint: !Equals
    - !Ref 'LaunchRoleName'
    - ''
  CondCreateEndUsers: !Equals
    - !Ref 'CreateEndUsers'
    - 'Yes'
  CondLinkRole1: !Not
    - !Equals
      - !Ref 'LinkedRole1'
      - ''
  CondLinkRole2: !Not
    - !Equals
      - !Ref 'LinkedRole2'
      - ''
Resources:
  Analyticsportfolio:
    Type: AWS::ServiceCatalog::Portfolio
    Properties:
      ProviderName: !Ref 'PortfolioProvider'
      Description: !Ref 'PorfolioDescription'
      DisplayName: !Ref 'PorfolioName'
  addrole1:
    Type: AWS::ServiceCatalog::PortfolioPrincipalAssociation
    Condition: CondLinkRole1
    Properties:
      PrincipalARN: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${LinkedRole1}'
      PortfolioId: !Ref 'Analyticsportfolio'
      PrincipalType: IAM
  addrole2:
    Type: AWS::ServiceCatalog::PortfolioPrincipalAssociation
    Condition: CondLinkRole2
    Properties:
      PrincipalARN: !Sub 'arn:aws:iam::${AWS::AccountId}:role/${LinkedRole2}'
      PortfolioId: !Ref 'Analyticsportfolio'
      PrincipalType: IAM
  stackServiceCatalogEndusers:
    Type: AWS::CloudFormation::Stack
    Condition: CondCreateEndUsers
    Properties:
      TemplateURL: !Sub '${RepoRootURL}iam/sc-enduser-iam.template'
      TimeoutInMinutes: 5
  LinkEndusersRole:
    Type: AWS::ServiceCatalog::PortfolioPrincipalAssociation
    Properties:
      PrincipalARN: !If
        - CondCreateEndUsers
        - !GetAtt 'stackServiceCatalogEndusers.Outputs.EndUserRoleArn'
        - !Sub 'arn:aws:iam::${AWS::AccountId}:role/ServiceCatalogEndusers'
      PortfolioId: !Ref 'Analyticsportfolio'
      PrincipalType: IAM
  LinkEndusersGroup:
    Type: AWS::ServiceCatalog::PortfolioPrincipalAssociation
    Properties:
      PrincipalARN: !If
        - CondCreateEndUsers
        - !GetAtt 'stackServiceCatalogEndusers.Outputs.EndUserGroupArn'
        - !Sub 'arn:aws:iam::${AWS::AccountId}:group/ServiceCatalogEndusers'
      PortfolioId: !Ref 'Analyticsportfolio'
      PrincipalType: IAM
  LaunchConstraintRole:
    Type: AWS::CloudFormation::Stack
    Condition: CreateLaunchConstraint
    Properties:
      TemplateURL: !Sub '${RepoRootURL}iam/sc-launchrole.template'
      TimeoutInMinutes: 5
  analyticsproduct:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        PortfolioProvider: !Ref 'PortfolioProvider'
        LaunchConstraintARN: !If
          - CreateLaunchConstraint
          - !GetAtt 'LaunchConstraintRole.Outputs.LaunchRoleArn'
          - !Sub 'arn:aws:iam::${AWS::AccountId}:role/${LaunchRoleName}'
        PortfolioId: !Ref 'Analyticsportfolio'
        RepoRootURL: !Ref 'RepoRootURL'
      TemplateURL: !Sub '${RepoRootURL}pop-up-analytics-product.template'
      TimeoutInMinutes: 5